Coverage Report by file with details

=================================================================================
=== File: ALSU.v
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           48        48         0     100.0

================================Statement Details================================

Statement Coverage for file ALSU.v --

    1                                                module ALSU(A, B, cin, serial_in, red_op_A, red_op_B, opcode, bypass_A, bypass_B, clk, rst, direction, leds, out);
    2                                                parameter INPUT_PRIORITY = "A";
    3                                                parameter FULL_ADDER = "ON";
    4                                                input clk, rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    5                                                input [2:0] opcode;
    6                                                input signed [2:0] A, B;
    7                                                output reg [15:0] leds;
    8                                                output reg signed [5:0] out;
    9                                                
    10                                               reg cin_reg, red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    11                                               reg signed [2:0] A_reg, B_reg;
    12                                               reg [2:0] opcode_reg;
    13                                               
    14                                               wire invalid_red_op, invalid_opcode, invalid;
    15                                               
    16                                               //Invalid handling
    17              1                       4903     assign invalid_red_op = (red_op_A_reg || red_op_B_reg) && (opcode_reg!=0 && opcode_reg!=1);///bug:opcode for or=0,xor=1
    18              1                       4532     assign invalid_opcode = (opcode_reg==6 || opcode_reg==7);// bug: invalid opcodes are 6,7 and should be ored together
    19              1                       2086     assign invalid = invalid_red_op || invalid_opcode;
    20                                               
    21                                               //Registering input signals
    22              1                       5356     always @(posedge clk or posedge rst) begin
    23                                                 if(rst) begin
    24              1                        100          cin_reg <= 0;
    25              1                        100          red_op_B_reg <= 0;
    26              1                        100          red_op_A_reg <= 0;
    27              1                        100          bypass_B_reg <= 0;
    28              1                        100          bypass_A_reg <= 0;
    29              1                        100          direction_reg <= 0;
    30              1                        100          serial_in_reg <= 0;
    31              1                        100          opcode_reg <= 0;
    32              1                        100          A_reg <= 0;
    33              1                        100          B_reg <= 0;
    34                                                 end else begin
    35              1                       5256          cin_reg <= cin;
    36              1                       5256          red_op_B_reg <= red_op_B;
    37              1                       5256          red_op_A_reg <= red_op_A;
    38              1                       5256          bypass_B_reg <= bypass_B;
    39              1                       5256          bypass_A_reg <= bypass_A;
    40              1                       5256          direction_reg <= direction;
    41              1                       5256          serial_in_reg <= serial_in;
    42              1                       5256          opcode_reg <= opcode;
    43              1                       5256          A_reg <= A;
    44              1                       5256          B_reg <= B;
    45                                                 end
    46                                               end
    47                                               
    48                                               //leds output blinking 
    49              1                       5356     always @(posedge clk or posedge rst) begin
    50                                                 if(rst) begin
    51              1                        100          leds <= 0;
    52                                                 end else begin
    53                                                     if (invalid)
    54              1                       1416             leds <= ~leds;
    55                                                     else
    56              1                       3840             leds <= 0;
    57                                                 end
    58                                               end
    59                                               
    60                                               //ALSU output processing
    61              1                       5355     always @(posedge clk or posedge rst) begin
    62                                                 if(rst) begin
    63              1                        100         out <= 0;
    64                                                 end
    65                                                 else begin
    66                                                   if (invalid) 
    67              1                       1416             out <= 0;
    68                                                   else if (bypass_A_reg && bypass_B_reg)
    69              1                          2           out <= (INPUT_PRIORITY == "A")? A_reg: B_reg;
    70                                                   else if (bypass_A_reg )
    71              1                        120           out <= A_reg;
    72                                                   else if (bypass_B_reg )
    73              1                        156           out <= B_reg;
    74                                                   else begin
    75                                                       case (opcode_reg)
    76                                                         3'h0: begin //bug: 000 is an or operation
    77                                                           if (red_op_A_reg && red_op_B_reg)
    78              1                         58                   out = (INPUT_PRIORITY == "A")? |A_reg: |B_reg;
    79                                                           else if (red_op_A_reg ) 
    80              1                         40                   out <= |A_reg;
    81                                                           else if (red_op_B_reg )
    82              1                         47                   out <= |B_reg;
    83                                                           else 
    84              1                        652                   out <= A_reg | B_reg;
    85                                                         end
    86                                                         3'h1: begin //bug: 001 is an xor operation
    87                                                           if (red_op_A_reg && red_op_B_reg)
    88              1                         69                   out <= (INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    89                                                           else if (red_op_A_reg ) 
    90              1                         44                   out <= ^A_reg;
    91                                                           else if (red_op_B_reg )
    92              1                         46                   out <= ^B_reg;
    93                                                           else 
    94              1                        607                   out <= A_reg ^ B_reg;
    95                                                         end
    96                                                         3'h2:begin // added the effect of cin when the parameter FULL_ADDER is on
    97                                                             if( FULL_ADDER == "ON")
    98              1                        494                      out <= A_reg + B_reg + cin_reg;
    99                                                             else
    100                                                               out <= A_reg + B_reg;
    101                                                        end
    102             1                        510               3'h3: out <= A_reg * B_reg;
    103                                                        3'h4: begin
    104                                                          if (direction_reg)
    105             1                        243                   out <= {out[4:0], serial_in_reg};
    106                                                          else
    107             1                        263                   out <= {serial_in_reg, out[5:1]};
    108                                                        end
    109                                                        3'h5: begin
    110                                                          if (direction_reg)
    111             1                        242                   out <= {out[4:0], out[5]};
    112                                                          else
    113             1                        246                   out <= {out[0], out[5:1]};
    114                                                        end
    115             1                          E               default:out<=0;
    116                                                      endcase
    117                                                  end 
    118                                                end
    119                                              end
    120                                              
    121                                              endmodule

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        31        31         0     100.0

================================Branch Details================================

Branch Coverage for file ALSU.v --

------------------------------------IF Branch------------------------------------
    23                                      5356     Count coming in to IF
    23              1                        100       if(rst) begin
    34              1                       5256       end else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    50                                      5356     Count coming in to IF
    50              1                        100       if(rst) begin
    52              1                       5256       end else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    53                                      5256     Count coming in to IF
    53              1                       1416           if (invalid)
    55              1                       3840           else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    62                                      5355     Count coming in to IF
    62              1                        100       if(rst) begin
    65              1                       5255       else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    66                                      5255     Count coming in to IF
    66              1                       1416         if (invalid) 
    68              1                          2         else if (bypass_A_reg && bypass_B_reg)
    70              1                        120         else if (bypass_A_reg )
    72              1                        156         else if (bypass_B_reg )
    74              1                       3561         else begin
Branch totals: 5 hits of 5 branches = 100.0%

------------------------------------CASE Branch------------------------------------
    75                                      3561     Count coming in to CASE
    76              1                        797               3'h0: begin //bug: 000 is an or operation
    86              1                        766               3'h1: begin //bug: 001 is an xor operation
    96              1                        494               3'h2:begin // added the effect of cin when the parameter FULL_ADDER is on
    102             1                        510               3'h3: out <= A_reg * B_reg;
    103             1                        506               3'h4: begin
    109             1                        488               3'h5: begin
    115             1                          E               default:out<=0;
Branch totals: 6 hits of 6 branches = 100.0%

------------------------------------IF Branch------------------------------------
    77                                       797     Count coming in to IF
    77              1                         58                 if (red_op_A_reg && red_op_B_reg)
    79              1                         40                 else if (red_op_A_reg ) 
    81              1                         47                 else if (red_op_B_reg )
    83              1                        652                 else 
Branch totals: 4 hits of 4 branches = 100.0%

------------------------------------IF Branch------------------------------------
    87                                       766     Count coming in to IF
    87              1                         69                 if (red_op_A_reg && red_op_B_reg)
    89              1                         44                 else if (red_op_A_reg ) 
    91              1                         46                 else if (red_op_B_reg )
    93              1                        607                 else 
Branch totals: 4 hits of 4 branches = 100.0%

------------------------------------IF Branch------------------------------------
    104                                      506     Count coming in to IF
    104             1                        243                 if (direction_reg)
    106             1                        263                 else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    110                                      488     Count coming in to IF
    110             1                        242                 if (direction_reg)
    112             1                        246                 else
Branch totals: 2 hits of 2 branches = 100.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              6         6         0     100.0

================================Condition Details================================

Condition Coverage for file ALSU.v --

----------------Focused Condition View-------------------
Line       68 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       77 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       87 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             8         8         0     100.0

================================Expression Details================================

Expression Coverage for file ALSU.v --

----------------Focused Expression View-----------------
Line       17 Item    1  (((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0)) && (opcode_reg != 1))
Expression totals: 4 of 4 input terms covered = 100.0%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
       red_op_A_reg         Y
       red_op_B_reg         Y
  (opcode_reg != 0)         Y
  (opcode_reg != 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ~red_op_B_reg                 
  Row   2:          1  red_op_A_reg_1        ((opcode_reg != 1) && (opcode_reg != 0))
  Row   3:          1  red_op_B_reg_0        ~red_op_A_reg                 
  Row   4:          1  red_op_B_reg_1        ((opcode_reg != 1) && (opcode_reg != 0) && ~red_op_A_reg)
  Row   5:          1  (opcode_reg != 0)_0   (red_op_A_reg || red_op_B_reg)
  Row   6:          1  (opcode_reg != 0)_1   ((opcode_reg != 1) && (red_op_A_reg || red_op_B_reg))
  Row   7:          1  (opcode_reg != 1)_0   ((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0))
  Row   8:          1  (opcode_reg != 1)_1   ((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0))

----------------Focused Expression View-----------------
Line       18 Item    1  ((opcode_reg == 6) || (opcode_reg == 7))
Expression totals: 2 of 2 input terms covered = 100.0%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (opcode_reg == 6)         Y
  (opcode_reg == 7)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (opcode_reg == 6)_0   ~(opcode_reg == 7)            
  Row   2:          1  (opcode_reg == 6)_1   -                             
  Row   3:          1  (opcode_reg == 7)_0   ~(opcode_reg == 6)            
  Row   4:          1  (opcode_reg == 7)_1   ~(opcode_reg == 6)            

----------------Focused Expression View-----------------
Line       19 Item    1  (invalid_red_op || invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.0%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      -                             
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                    118       118         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU.v --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          4                              serial_in           1           1                              100.00 
          4                                    rst           1           1                              100.00 
          4                               red_op_B           1           1                              100.00 
          4                               red_op_A           1           1                              100.00 
          4                              direction           1           1                              100.00 
          4                                    clk           1           1                              100.00 
          4                                    cin           1           1                              100.00 
          4                               bypass_B           1           1                              100.00 
          4                               bypass_A           1           1                              100.00 
          5                              opcode[2]           1           1                              100.00 
          5                              opcode[1]           1           1                              100.00 
          5                              opcode[0]           1           1                              100.00 
          6                                   B[2]           1           1                              100.00 
          6                                   B[1]           1           1                              100.00 
          6                                   B[0]           1           1                              100.00 
          6                                   A[2]           1           1                              100.00 
          6                                   A[1]           1           1                              100.00 
          6                                   A[0]           1           1                              100.00 
          7                                leds[9]           1           1                              100.00 
          7                                leds[8]           1           1                              100.00 
          7                                leds[7]           1           1                              100.00 
          7                                leds[6]           1           1                              100.00 
          7                                leds[5]           1           1                              100.00 
          7                                leds[4]           1           1                              100.00 
          7                                leds[3]           1           1                              100.00 
          7                                leds[2]           1           1                              100.00 
          7                                leds[1]           1           1                              100.00 
          7                               leds[15]           1           1                              100.00 
          7                               leds[14]           1           1                              100.00 
          7                               leds[13]           1           1                              100.00 
          7                               leds[12]           1           1                              100.00 
          7                               leds[11]           1           1                              100.00 
          7                               leds[10]           1           1                              100.00 
          7                                leds[0]           1           1                              100.00 
          8                                 out[5]           1           1                              100.00 
          8                                 out[4]           1           1                              100.00 
          8                                 out[3]           1           1                              100.00 
          8                                 out[2]           1           1                              100.00 
          8                                 out[1]           1           1                              100.00 
          8                                 out[0]           1           1                              100.00 
         10                          serial_in_reg           1           1                              100.00 
         10                           red_op_B_reg           1           1                              100.00 
         10                           red_op_A_reg           1           1                              100.00 
         10                          direction_reg           1           1                              100.00 
         10                                cin_reg           1           1                              100.00 
         10                           bypass_B_reg           1           1                              100.00 
         10                           bypass_A_reg           1           1                              100.00 
         11                               B_reg[2]           1           1                              100.00 
         11                               B_reg[1]           1           1                              100.00 
         11                               B_reg[0]           1           1                              100.00 
         11                               A_reg[2]           1           1                              100.00 
         11                               A_reg[1]           1           1                              100.00 
         11                               A_reg[0]           1           1                              100.00 
         12                          opcode_reg[2]           1           1                              100.00 
         12                          opcode_reg[1]           1           1                              100.00 
         12                          opcode_reg[0]           1           1                              100.00 
         14                         invalid_red_op           1           1                              100.00 
         14                         invalid_opcode           1           1                              100.00 
         14                                invalid           1           1                              100.00 

Total Node Count     =         59 
Toggled Node Count   =         59 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (118 of 118 bins)

=================================================================================
=== File: ALSU_tb.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                          151       148         3      98.0

================================Statement Details================================

Statement Coverage for file ALSU_tb.sv --

    1                                                
    2                                                import m2 ::*;
    3                                                module ALSU_tb();
    4                                                bit clk, rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    5                                                opcode_e opcode;
    6                                                bit signed [2:0] A, B;
    7                                                bit [15:0] leds,leds_exp;
    8                                                bit signed [5:0] out,out_exp;
    9                                                /////////////////////////opcode_e arr[6]; 
    10                                               parameter INPUT_PRIORITY = "A";
    11                                               parameter FULL_ADDER = "ON";
    12                                               
    13                                               bit cin_reg, red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    14                                               bit signed [2:0] A_reg, B_reg;
    15                                               bit [2:0] opcode_reg;
    16                                               bit invalid_red_op, invalid_opcode, invalid;
    17                                               
    18                                               ALSU DUT(.*);
    19              1                          1     alsu a=new;
    20                                               integer error_count,correct_count,i;
    21                                               initial
    22                                               begin
    23              1                          1     clk=0;
    24              1                          1     forever begin
    25              1                      10613     #1 clk=~clk;
    25              2                      10612     
    26              1                      10612     a.clk=clk;
    27                                               end
    28                                               end
    29                                               
    30                                               initial
    31                                               begin 
    32                                               
    33              1                          1     error_count=0;
    34              1                          1     correct_count=0;
    35              1                          1         a.rst=1'b1;
    36              1                          1         init(a);
    37              1                          1         check_result(a);
    38                                               
    39              1                          1         a.constraint_mode(0);
    40              1                          1         a.ALSU_Cons.constraint_mode(1);
    41              1                       5000         repeat(5000) begin
    42                                                       assert(a.randomize());
    43              1                       5000             init(a);
    44              1                       5000             check_result(a);
    45              1                       5000             sampling(a);
    46                                                   end
    47                                               
    48              1                          1         a.constraint_mode(0);
    49              1                          1         a.extra.constraint_mode(1);
    50              1                          1         a.rst=0;a.bypass_A=0;a.bypass_B=0;a.red_op_A=0;a.red_op_B=0;
    50              2                          1     
    50              3                          1     
    50              4                          1     
    50              5                          1     
    51              1                          1         a.rst.rand_mode(0);a.bypass_A.rand_mode(0);a.bypass_B.rand_mode(0);a.red_op_A.rand_mode(0);
    51              2                          1     
    51              3                          1     
    51              4                          1     
    52              1                          1        a.red_op_B.rand_mode(0);
    53              1                          1         init(a);
    54                                               
    55              1                          1         for(int i=0;i<50;i++)begin
    55              2                         50     
    56                                                       assert(a.randomize());
    57              1                         50             cin=a.cin;direction=a.direction;serial_in=a.serial_in;A=a.A;B=a.B;
    57              2                         50     
    57              3                         50     
    57              4                         50     
    57              5                         50     
    58              1                          1             if(i==28)a.arr.sort();
    59              1                        350             foreach(a.arr[j])begin
    60                                                         
    61              1                        300                 a.opcode=a.arr[j];
    62              1                        300                 opcode=a.arr[j];
    63              1                        300                 a.out=out;
    64              1                        300                 a.leds=leds;
    65              1                        300                 check_result(a);
    66              1                        300                 sampling(a);
    67                                                       end
    68                                                   end
    69                                               
    70              1                          1     a.rst=0;
    71              1                          1     a.A=2;
    72              1                          1     a.B=1;
    73              1                          1     a.opcode=OR;
    74              1                          1     a.bypass_A=1;
    75              1                          1     a.bypass_B=1;
    76              1                          1     sampling(a);
    77              1                          1     init(a);
    78              1                          1     check_result(a) ;//ALSU_3
    79              1                          1     a.bypass_A=0;
    80              1                          1     a.bypass_B=1;
    81              1                          1     sampling(a);
    82              1                          1     init(a);
    83              1                          1     check_result(a) ;//ALSU_4
    84              1                          1     a.bypass_A=1;
    85              1                          1     a.bypass_B=0;
    86              1                          1     sampling(a);
    87              1                          1     init(a);
    88              1                          1     check_result(a) ;//ALSU_5
    89              1                          1     a.bypass_A=0;
    90              1                          1     a.bypass_B=0;
    91              1                          1     a.red_op_A=1;
    92              1                          1     a.red_op_B=0;
    93              1                          1     sampling(a);
    94              1                          1     init(a);
    95              1                          1     check_result(a) ;//ALSU_6
    96              1                          1     a.red_op_A=0;
    97              1                          1     a.red_op_B=1;
    98              1                          1     sampling(a);
    99              1                          1     init(a);
    100             1                          1     check_result(a) ;//ALSU_7
    101             1                          1     $display(" Number of error transactions %d",error_count);
    102             1                          1     $display(" Number of correct transactions %d",correct_count);
    103             1                          1     $stop;
    104                                              end
    105                                              
    106                                              ///////golden_model//////////
    107                                              
    108             1                       5356     always @(posedge clk or posedge rst) begin
    109                                                if(rst) begin
    110             1                        100          cin_reg <= 0;
    111             1                        100          red_op_B_reg <= 0;
    112             1                        100          red_op_A_reg <= 0;
    113             1                        100          bypass_B_reg <= 0;
    114             1                        100          bypass_A_reg <= 0;
    115             1                        100          direction_reg <= 0;
    116             1                        100          serial_in_reg <= 0;
    117             1                        100          opcode_reg <= 0;
    118             1                        100          A_reg <= 0;
    119             1                        100          B_reg <= 0;
    120                                                end else begin
    121             1                       5256          cin_reg <= cin;
    122             1                       5256          red_op_B_reg <= red_op_B;
    123             1                       5256          red_op_A_reg <= red_op_A;
    124             1                       5256          bypass_B_reg <= bypass_B;
    125             1                       5256          bypass_A_reg <= bypass_A;
    126             1                       5256          direction_reg <= direction;
    127             1                       5256          serial_in_reg <= serial_in;
    128             1                       5256          opcode_reg <= opcode;
    129             1                       5256          A_reg <= A;
    130             1                       5256          B_reg <= B;
    131                                                end
    132                                              end
    133                                              
    134                                              //leds output blinking 
    135             1                       5356     always @(posedge clk or posedge rst) begin
    136                                                if(rst) begin
    137             1                        100          leds_exp <= 0;
    138                                                end else begin
    139                                                    if (invalid)
    140             1                       1416             leds_exp <= ~leds_exp;
    141                                                    else
    142             1                       3840             leds_exp <= 0;
    143                                                end
    144                                              end
    145                                              
    146                                              //ALSU output processing
    147             1                       5355     always @(posedge clk or posedge rst) begin
    148                                                if(rst) begin
    149             1                        100         out_exp <= 0;
    150                                                end
    151                                                else begin
    152                                                  if (invalid) 
    153             1                       1416             out_exp <= 0;
    154                                                  else if (bypass_A_reg && bypass_B_reg)
    155             1                          2           out_exp <= (INPUT_PRIORITY == "A")? A_reg: B_reg;
    156                                                  else if (bypass_A_reg )
    157             1                        120           out_exp <= A_reg;
    158                                                  else if (bypass_B_reg )
    159             1                        156           out_exp <= B_reg;
    160                                                  else begin
    161                                                      case (opcode_reg)
    162                                                        3'h0: begin 
    163                                                          if (red_op_A_reg && red_op_B_reg)
    164             1                         58                   out_exp = (INPUT_PRIORITY == "A")? |A_reg: |B_reg;
    165                                                          else if (red_op_A_reg ) 
    166             1                         40                   out_exp <= |A_reg;
    167                                                          else if (red_op_B_reg )
    168             1                         47                   out_exp <= |B_reg;
    169                                                          else 
    170             1                        652                   out_exp <= A_reg | B_reg;
    171                                                        end
    172                                                        3'h1: begin 
    173                                                          if (red_op_A_reg && red_op_B_reg)
    174             1                         69                   out_exp <= (INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    175                                                          else if (red_op_A_reg ) 
    176             1                         44                   out_exp <= ^A_reg;
    177                                                          else if (red_op_B_reg )
    178             1                         46                   out_exp <= ^B_reg;
    179                                                          else 
    180             1                        607                   out_exp <= A_reg ^ B_reg;
    181                                                        end
    182                                                        3'h2:begin 
    183                                                            if( FULL_ADDER == "ON")
    184             1                        494                      out_exp <= A_reg + B_reg + cin_reg;
    185                                                            else
    186                                                               out_exp <= A_reg + B_reg;
    187                                                        end
    188             1                        510               3'h3: out_exp <= A_reg * B_reg;
    189                                                        3'h4: begin
    190                                                          if (direction_reg)
    191             1                        243                   out_exp <= {out_exp[4:0], serial_in_reg};
    192                                                          else
    193             1                        263                   out_exp <= {serial_in_reg, out_exp[5:1]};
    194                                                        end
    195                                                        3'h5: begin
    196                                                          if (direction_reg)
    197             1                        242                   out_exp <= {out_exp[4:0], out_exp[5]};
    198                                                          else
    199             1                        246                   out_exp <= {out_exp[0], out_exp[5:1]};
    200                                                        end
    201             1                    ***0***               default:out_exp<=0;
    202                                                      endcase
    203                                                  end 
    204                                                end
    205                                              end
    206             1                       4901     always@* begin
    207             1                       4901      invalid_red_op = (red_op_A_reg || red_op_B_reg) && (opcode_reg!=0 && opcode_reg!=1);
    208             1                       4901      invalid_opcode = (opcode_reg==6 || opcode_reg==7);
    209             1                       4901     invalid = invalid_red_op || invalid_opcode;
    210                                              end
    211                                              
    212                                              
    213                                              
    214                                              task check_result(alsu tr) ;
    215             1                       5306       @(negedge clk);
    216             1                       5306      a.out=out;
    217             1                       5306      a.leds=leds;
    218                                               if((a.out!=out_exp) || (a.leds!=leds_exp)) begin
    219             1                    ***0***         $display("incorrect result %t",$time);
    220             1                    ***0***         error_count=error_count+1; end
    221                                               else
    222             1                       5306       correct_count=correct_count+1;
    223                                              
    224                                              endtask
    225                                               function void init(alsu tr);
    226             1                       5007             opcode=tr.opcode;A=tr.A;B=tr.B;
    226             2                       5007     
    226             3                       5007     
    227             1                       5007             rst=tr.rst;cin=tr.cin; red_op_A=tr.red_op_A; red_op_B=tr.red_op_B; bypass_A=tr.bypass_A;
    227             2                       5007     
    227             3                       5007     
    227             4                       5007     
    227             5                       5007     
    228             1                       5007             bypass_B=tr.bypass_B; direction=tr.direction; serial_in=tr.serial_in ;
    228             2                       5007     
    228             3                       5007     
    229             1                       5007             tr.out=out;tr.leds=leds;
    229             2                       5007     
    230                                                  endfunction
    231                                              
    232                                                  function  void  sampling(alsu a);
    233                                                      if(rst ||bypass_B||bypass_A)begin
    234             1                        448                 a.cov.stop();
    235                                                      end
    236                                                      else begin
    237             1                       4857                 a.cov.start();
    238             1                       4857                 a.cov.sample();
    239                                                      end
    240                                                  endfunction
    241                                              
    242                                              endmodule
    243                                              
    244                                              

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        38        36         2      94.7

================================Branch Details================================

Branch Coverage for file ALSU_tb.sv --

------------------------------------IF Branch------------------------------------
    58                                        50     Count coming in to IF
    58              1                          1             if(i==28)a.arr.sort();
                                              49     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    109                                     5356     Count coming in to IF
    109             1                        100       if(rst) begin
    120             1                       5256       end else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    136                                     5356     Count coming in to IF
    136             1                        100       if(rst) begin
    138             1                       5256       end else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    139                                     5256     Count coming in to IF
    139             1                       1416           if (invalid)
    141             1                       3840           else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    148                                     5355     Count coming in to IF
    148             1                        100       if(rst) begin
    151             1                       5255       else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    152                                     5255     Count coming in to IF
    152             1                       1416         if (invalid) 
    154             1                          2         else if (bypass_A_reg && bypass_B_reg)
    156             1                        120         else if (bypass_A_reg )
    158             1                        156         else if (bypass_B_reg )
    160             1                       3561         else begin
Branch totals: 5 hits of 5 branches = 100.0%

------------------------------------CASE Branch------------------------------------
    161                                     3561     Count coming in to CASE
    162             1                        797               3'h0: begin 
    172             1                        766               3'h1: begin 
    182             1                        494               3'h2:begin 
    188             1                        510               3'h3: out_exp <= A_reg * B_reg;
    189             1                        506               3'h4: begin
    195             1                        488               3'h5: begin
    201             1                    ***0***               default:out_exp<=0;
Branch totals: 6 hits of 7 branches = 85.7%

------------------------------------IF Branch------------------------------------
    163                                      797     Count coming in to IF
    163             1                         58                 if (red_op_A_reg && red_op_B_reg)
    165             1                         40                 else if (red_op_A_reg ) 
    167             1                         47                 else if (red_op_B_reg )
    169             1                        652                 else 
Branch totals: 4 hits of 4 branches = 100.0%

------------------------------------IF Branch------------------------------------
    173                                      766     Count coming in to IF
    173             1                         69                 if (red_op_A_reg && red_op_B_reg)
    175             1                         44                 else if (red_op_A_reg ) 
    177             1                         46                 else if (red_op_B_reg )
    179             1                        607                 else 
Branch totals: 4 hits of 4 branches = 100.0%

------------------------------------IF Branch------------------------------------
    190                                      506     Count coming in to IF
    190             1                        243                 if (direction_reg)
    192             1                        263                 else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    196                                      488     Count coming in to IF
    196             1                        242                 if (direction_reg)
    198             1                        246                 else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    218                                     5306     Count coming in to IF
    218             1                    ***0***      if((a.out!=out_exp) || (a.leds!=leds_exp)) begin
    221             1                       5306      else
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    233                                     5305     Count coming in to IF
    233             1                        448             if(rst ||bypass_B||bypass_A)begin
    236             1                       4857             else begin
Branch totals: 2 hits of 2 branches = 100.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms             11         9         2      81.8

================================Condition Details================================

Condition Coverage for file ALSU_tb.sv --

----------------Focused Condition View-------------------
Line       154 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       163 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       173 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       218 Item    1  ((a.out != out_exp) || (a.leds != leds_exp))
Condition totals: 0 of 2 input terms covered = 0.0%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
    (a.out != out_exp)         N  '_1' not hit             Hit '_1'
  (a.leds != leds_exp)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (a.out != out_exp)_0    ~(a.leds != leds_exp)         
  Row   2:    ***0***  (a.out != out_exp)_1    -                             
  Row   3:          1  (a.leds != leds_exp)_0  ~(a.out != out_exp)           
  Row   4:    ***0***  (a.leds != leds_exp)_1  ~(a.out != out_exp)           

----------------Focused Condition View-------------------
Line       233 Item    1  ((rst || bypass_B) || bypass_A)
Condition totals: 3 of 3 input terms covered = 100.0%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
         rst         Y
    bypass_B         Y
    bypass_A         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rst_0                 (~bypass_A && ~bypass_B)      
  Row   2:          1  rst_1                 -                             
  Row   3:          1  bypass_B_0            (~bypass_A && ~rst)           
  Row   4:          1  bypass_B_1            ~rst                          
  Row   5:          1  bypass_A_0            ~(rst || bypass_B)            
  Row   6:          1  bypass_A_1            ~(rst || bypass_B)            


Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             8         8         0     100.0

================================Expression Details================================

Expression Coverage for file ALSU_tb.sv --

----------------Focused Expression View-----------------
Line       207 Item    1  (((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0)) && (opcode_reg != 1))
Expression totals: 4 of 4 input terms covered = 100.0%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
       red_op_A_reg         Y
       red_op_B_reg         Y
  (opcode_reg != 0)         Y
  (opcode_reg != 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ~red_op_B_reg                 
  Row   2:          1  red_op_A_reg_1        ((opcode_reg != 1) && (opcode_reg != 0))
  Row   3:          1  red_op_B_reg_0        ~red_op_A_reg                 
  Row   4:          1  red_op_B_reg_1        ((opcode_reg != 1) && (opcode_reg != 0) && ~red_op_A_reg)
  Row   5:          1  (opcode_reg != 0)_0   (red_op_A_reg || red_op_B_reg)
  Row   6:          1  (opcode_reg != 0)_1   ((opcode_reg != 1) && (red_op_A_reg || red_op_B_reg))
  Row   7:          1  (opcode_reg != 1)_0   ((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0))
  Row   8:          1  (opcode_reg != 1)_1   ((red_op_A_reg || red_op_B_reg) && (opcode_reg != 0))

----------------Focused Expression View-----------------
Line       208 Item    1  ((opcode_reg == 6) || (opcode_reg == 7))
Expression totals: 2 of 2 input terms covered = 100.0%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (opcode_reg == 6)         Y
  (opcode_reg == 7)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (opcode_reg == 6)_0   ~(opcode_reg == 7)            
  Row   2:          1  (opcode_reg == 6)_1   -                             
  Row   3:          1  (opcode_reg == 7)_0   ~(opcode_reg == 6)            
  Row   4:          1  (opcode_reg == 7)_1   ~(opcode_reg == 6)            

----------------Focused Expression View-----------------
Line       209 Item    1  (invalid_red_op || invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.0%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      -                             
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                    356       189       167      53.0

================================Toggle Details================================

Toggle Coverage for File ALSU_tb.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          4                              serial_in           1           1                              100.00 
          4                                    rst           1           1                              100.00 
          4                               red_op_B           1           1                              100.00 
          4                               red_op_A           1           1                              100.00 
          4                              direction           1           1                              100.00 
          4                                    clk           1           1                              100.00 
          4                                    cin           1           1                              100.00 
          4                               bypass_B           1           1                              100.00 
          4                               bypass_A           1           1                              100.00 
          5                                 opcode               ENUM type       Value       Count 
                                                                        OR          14      100.00 
                                                                       XOR          10      100.00 
                                                                       ADD           8      100.00 
                                                                      MULT          13      100.00 
                                                                     SHIFT          10      100.00 
                                                                    ROTATE           9      100.00 
                                                                 INVALID_6           1      100.00 
                                                                 INVALID_7           2      100.00 
          6                                   B[2]           1           1                              100.00 
          6                                   B[1]           1           1                              100.00 
          6                                   B[0]           1           1                              100.00 
          6                                   A[2]           1           1                              100.00 
          6                                   A[1]           1           1                              100.00 
          6                                   A[0]           1           1                              100.00 
          7                            leds_exp[9]           1           1                              100.00 
          7                            leds_exp[8]           1           1                              100.00 
          7                            leds_exp[7]           1           1                              100.00 
          7                            leds_exp[6]           1           1                              100.00 
          7                            leds_exp[5]           1           1                              100.00 
          7                            leds_exp[4]           1           1                              100.00 
          7                            leds_exp[3]           1           1                              100.00 
          7                            leds_exp[2]           1           1                              100.00 
          7                            leds_exp[1]           1           1                              100.00 
          7                           leds_exp[15]           1           1                              100.00 
          7                           leds_exp[14]           1           1                              100.00 
          7                           leds_exp[13]           1           1                              100.00 
          7                           leds_exp[12]           1           1                              100.00 
          7                           leds_exp[11]           1           1                              100.00 
          7                           leds_exp[10]           1           1                              100.00 
          7                            leds_exp[0]           1           1                              100.00 
          7                                leds[9]           1           1                              100.00 
          7                                leds[8]           1           1                              100.00 
          7                                leds[7]           1           1                              100.00 
          7                                leds[6]           1           1                              100.00 
          7                                leds[5]           1           1                              100.00 
          7                                leds[4]           1           1                              100.00 
          7                                leds[3]           1           1                              100.00 
          7                                leds[2]           1           1                              100.00 
          7                                leds[1]           1           1                              100.00 
          7                               leds[15]           1           1                              100.00 
          7                               leds[14]           1           1                              100.00 
          7                               leds[13]           1           1                              100.00 
          7                               leds[12]           1           1                              100.00 
          7                               leds[11]           1           1                              100.00 
          7                               leds[10]           1           1                              100.00 
          7                                leds[0]           1           1                              100.00 
          8                             out_exp[5]           1           1                              100.00 
          8                             out_exp[4]           1           1                              100.00 
          8                             out_exp[3]           1           1                              100.00 
          8                             out_exp[2]           1           1                              100.00 
          8                             out_exp[1]           1           1                              100.00 
          8                             out_exp[0]           1           1                              100.00 
          8                                 out[5]           1           1                              100.00 
          8                                 out[4]           1           1                              100.00 
          8                                 out[3]           1           1                              100.00 
          8                                 out[2]           1           1                              100.00 
          8                                 out[1]           1           1                              100.00 
          8                                 out[0]           1           1                              100.00 
         13                          serial_in_reg           1           1                              100.00 
         13                           red_op_B_reg           1           1                              100.00 
         13                           red_op_A_reg           1           1                              100.00 
         13                          direction_reg           1           1                              100.00 
         13                                cin_reg           1           1                              100.00 
         13                           bypass_B_reg           1           1                              100.00 
         13                           bypass_A_reg           1           1                              100.00 
         14                               B_reg[2]           1           1                              100.00 
         14                               B_reg[1]           1           1                              100.00 
         14                               B_reg[0]           1           1                              100.00 
         14                               A_reg[2]           1           1                              100.00 
         14                               A_reg[1]           1           1                              100.00 
         14                               A_reg[0]           1           1                              100.00 
         15                          opcode_reg[2]           1           1                              100.00 
         15                          opcode_reg[1]           1           1                              100.00 
         15                          opcode_reg[0]           1           1                              100.00 
         16                         invalid_red_op           1           1                              100.00 
         16                         invalid_opcode           1           1                              100.00 
         16                                invalid           1           1                              100.00 
         20                                   i[9]           0           0                                0.00 
         20                                   i[8]           0           0                                0.00 
         20                                   i[7]           0           0                                0.00 
         20                                   i[6]           0           0                                0.00 
         20                                   i[5]           0           0                                0.00 
         20                                   i[4]           0           0                                0.00 
         20                                   i[3]           0           0                                0.00 
         20                                  i[31]           0           0                                0.00 
         20                                  i[30]           0           0                                0.00 
         20                                   i[2]           0           0                                0.00 
         20                                  i[29]           0           0                                0.00 
         20                                  i[28]           0           0                                0.00 
         20                                  i[27]           0           0                                0.00 
         20                                  i[26]           0           0                                0.00 
         20                                  i[25]           0           0                                0.00 
         20                                  i[24]           0           0                                0.00 
         20                                  i[23]           0           0                                0.00 
         20                                  i[22]           0           0                                0.00 
         20                                  i[21]           0           0                                0.00 
         20                                  i[20]           0           0                                0.00 
         20                                   i[1]           0           0                                0.00 
         20                                  i[19]           0           0                                0.00 
         20                                  i[18]           0           0                                0.00 
         20                                  i[17]           0           0                                0.00 
         20                                  i[16]           0           0                                0.00 
         20                                  i[15]           0           0                                0.00 
         20                                  i[14]           0           0                                0.00 
         20                                  i[13]           0           0                                0.00 
         20                                  i[12]           0           0                                0.00 
         20                                  i[11]           0           0                                0.00 
         20                                  i[10]           0           0                                0.00 
         20                                   i[0]           0           0                                0.00 
         20                         error_count[9]           0           0                                0.00 
         20                         error_count[8]           0           0                                0.00 
         20                         error_count[7]           0           0                                0.00 
         20                         error_count[6]           0           0                                0.00 
         20                         error_count[5]           0           0                                0.00 
         20                         error_count[4]           0           0                                0.00 
         20                         error_count[3]           0           0                                0.00 
         20                        error_count[31]           0           0                                0.00 
         20                        error_count[30]           0           0                                0.00 
         20                         error_count[2]           0           0                                0.00 
         20                        error_count[29]           0           0                                0.00 
         20                        error_count[28]           0           0                                0.00 
         20                        error_count[27]           0           0                                0.00 
         20                        error_count[26]           0           0                                0.00 
         20                        error_count[25]           0           0                                0.00 
         20                        error_count[24]           0           0                                0.00 
         20                        error_count[23]           0           0                                0.00 
         20                        error_count[22]           0           0                                0.00 
         20                        error_count[21]           0           0                                0.00 
         20                        error_count[20]           0           0                                0.00 
         20                         error_count[1]           0           0                                0.00 
         20                        error_count[19]           0           0                                0.00 
         20                        error_count[18]           0           0                                0.00 
         20                        error_count[17]           0           0                                0.00 
         20                        error_count[16]           0           0                                0.00 
         20                        error_count[15]           0           0                                0.00 
         20                        error_count[14]           0           0                                0.00 
         20                        error_count[13]           0           0                                0.00 
         20                        error_count[12]           0           0                                0.00 
         20                        error_count[11]           0           0                                0.00 
         20                        error_count[10]           0           0                                0.00 
         20                         error_count[0]           0           0                                0.00 
         20                       correct_count[9]           1           1                              100.00 
         20                       correct_count[8]           1           1                              100.00 
         20                       correct_count[7]           1           1                              100.00 
         20                       correct_count[6]           1           1                              100.00 
         20                       correct_count[5]           1           1                              100.00 
         20                       correct_count[4]           1           1                              100.00 
         20                       correct_count[3]           1           1                              100.00 
         20                      correct_count[31]           0           0                                0.00 
         20                      correct_count[30]           0           0                                0.00 
         20                       correct_count[2]           1           1                              100.00 
         20                      correct_count[29]           0           0                                0.00 
         20                      correct_count[28]           0           0                                0.00 
         20                      correct_count[27]           0           0                                0.00 
         20                      correct_count[26]           0           0                                0.00 
         20                      correct_count[25]           0           0                                0.00 
         20                      correct_count[24]           0           0                                0.00 
         20                      correct_count[23]           0           0                                0.00 
         20                      correct_count[22]           0           0                                0.00 
         20                      correct_count[21]           0           0                                0.00 
         20                      correct_count[20]           0           0                                0.00 
         20                       correct_count[1]           1           1                              100.00 
         20                      correct_count[19]           0           0                                0.00 
         20                      correct_count[18]           0           0                                0.00 
         20                      correct_count[17]           0           0                                0.00 
         20                      correct_count[16]           0           0                                0.00 
         20                      correct_count[15]           0           0                                0.00 
         20                      correct_count[14]           0           0                                0.00 
         20                      correct_count[13]           0           0                                0.00 
         20                      correct_count[12]           0           1                               50.00 
         20                      correct_count[11]           1           1                              100.00 
         20                      correct_count[10]           1           1                              100.00 
         20                       correct_count[0]           1           1                              100.00 

Total Node Count     =        182 
Toggled Node Count   =         98 
Untoggled Node Count =         84 

Toggle Coverage      =       53.0% (189 of 356 bins)

=================================================================================
=== File: pck.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            1         1         0     100.0

================================Statement Details================================

Statement Coverage for file pck.sv --

    1                                                
    2                                                
    3                                                package m2;
    4                                                typedef enum bit [2:0] {OR,XOR,ADD,MULT,SHIFT,ROTATE,INVALID_6,INVALID_7} opcode_e;
    5                                                
    6                                                class alsu;
    7                                                bit clk;
    8                                                rand bit rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    9                                                rand opcode_e opcode;
    10                                               rand bit signed [2:0] A, B;
    11                                               bit [15:0] leds;
    12                                               bit signed [5:0] out;
    13                                               parameter MAXPOS=3,MAXNEG=-4,ZERO=0;
    14                                               rand opcode_e arr[6]; 
    15                                               constraint ALSU_Cons {
    16                                               
    17                                                   //Reset to be asserted with a low probability//
    18                                                   rst dist {1:=1,0:=99};
    19                                                   
    20                                                   // bypass_A and bypass_B should be disabled most of the time //
    21                                                   bypass_A dist {1:=4,0:=96};
    22                                                   bypass_B dist {1:=4,0:=96};
    23                                                   
    24                                                   // Invalid cases should occur less frequent than the valid cases //
    25                                                   opcode dist {INVALID_6:/2,INVALID_7:/2,[0:5]:/96};
    26                                                   if( red_op_A || red_op_B ) {opcode dist{OR:/40,XOR:/40,[2:7]:/20};}
    27                                                   // in case of addition or multiplication inputs (A, B) to take the values (MAXPOS, ZERO and MAXNEG) more often than others //
    28                                                   if( opcode == ADD || opcode == MULT )
    29                                                   {
    30                                                   A dist {MAXPOS:/33,MAXNEG:/32,ZERO:/30,[-3:-1]:/3,[1:2]:/2} ;
    31                                                   B dist {MAXPOS:/33,MAXNEG:/32,ZERO:/30,[-3:-1]:/3,[1:2]:/2} ;
    32                                                   }
    33                                                   else if(opcode == OR || opcode == XOR)
    34                                                   {
    35                                                       if (red_op_A) {
    36                                                           A dist {3'b001:/30,3'b010:/30,3'b100:/30,[-3:-1]:/6,3'b011:/2,3'b000:/2} ;
    37                                                           B == 0;
    38                                                       }
    39                                                       else if (red_op_B) {
    40                                                           B dist {3'b001:/30,3'b010:/30,3'b100:/30,[-3:-1]:/6,3'b011:/2,3'b000:/2}  ;
    41                                                           A == 0;
    42                                                       }
    43                                               }
    44                                               
    45                                               }
    46                                               constraint extra
    47                                               {
    48                                                  unique{arr};
    49                                                 foreach(arr[i])
    50                                                     arr[i] dist {[OR:ROTATE]:/100};
    51                                               
    52                                               }
    53                                               
    54                                               covergroup cov ;
    55                                               A_cp1 : coverpoint A
    56                                               {
    57                                                bins A_data_0 = {0};
    58                                                bins A_data_max = {MAXPOS};
    59                                                bins A_data_min = {MAXNEG};
    60                                                bins others = default;
    61                                               }
    62                                               A_cp2 : coverpoint A iff (red_op_A) {bins A_data_walkingones [] = {1,2,4};}
    63                                               
    64                                               B_cp1 : coverpoint B
    65                                               {
    66                                                bins B_data_0 = {0};
    67                                                bins B_data_max = {MAXPOS};
    68                                                bins B_data_min = {MAXNEG};
    69                                                bins others = default;
    70                                               
    71                                               }
    72                                               B_cp2 : coverpoint B iff (red_op_B && !red_op_A) {bins B_data_walkingones [] = {1,2,4};}
    73                                               ALU_cp : coverpoint opcode
    74                                               {
    75                                                bins trans =(OR=>XOR=>ADD=>MULT=>SHIFT=>ROTATE);
    76                                                bins shift[] = {SHIFT,ROTATE};
    77                                                bins arith[] = {OR,XOR};
    78                                                bins bitwise[] = {MULT,ADD};
    79                                                illegal_bins invalid = {INVALID_6,INVALID_7};
    80                                               }
    81                                               
    82                                               opcode_B: cross ALU_cp,B_cp1
    83                                               {
    84                                                bins op_b1 =binsof(ALU_cp.bitwise)&&binsof(B_cp1.B_data_0);
    85                                                bins op_b2 =binsof(ALU_cp.bitwise)&&binsof(B_cp1.B_data_max);
    86                                                bins op_b3 =binsof(ALU_cp.bitwise)&&binsof(B_cp1.B_data_min);
    87                                                option.cross_auto_bin_max=0;
    88                                               }
    89                                               opcode_A: cross ALU_cp,A_cp1
    90                                               {
    91                                                bins op_a1 =binsof(ALU_cp.bitwise)&&binsof(A_cp1.A_data_0);
    92                                                bins op_a2 =binsof(ALU_cp.bitwise)&&binsof(A_cp1.A_data_max);
    93                                                bins op_a3 =binsof(ALU_cp.bitwise)&&binsof(A_cp1.A_data_min);
    94                                                option.cross_auto_bin_max=0;
    95                                               }
    96                                               opcode_cin: cross opcode,cin
    97                                               {
    98                                                bins op_cin1 =binsof(opcode)intersect {ADD}&&binsof(cin)intersect {0};
    99                                                bins op_cin2 =binsof(opcode)intersect {ADD}&&binsof(cin)intersect {1};
    100                                               option.cross_auto_bin_max=0;
    101                                              }
    102                                              opcode_serial: cross opcode,serial_in
    103                                              {
    104                                               bins op_cin1 =binsof(opcode)intersect {SHIFT}&&binsof(serial_in)intersect {0};
    105                                               bins op_cin2 =binsof(opcode)intersect {SHIFT}&&binsof(serial_in)intersect {1};
    106                                               option.cross_auto_bin_max=0;
    107                                              }
    108                                              opcode_direction: cross ALU_cp,direction
    109                                              {
    110                                               bins op_dir1 =binsof(ALU_cp.shift)&&binsof(direction)intersect {0};
    111                                               bins op_dir2 =binsof(ALU_cp.shift)&&binsof(direction)intersect {1};
    112                                               option.cross_auto_bin_max=0;
    113                                              }
    114                                              reda: cross ALU_cp,A_cp2,B
    115                                              {
    116                                               bins op_redA =binsof(ALU_cp.arith)&&binsof(A_cp2)&&binsof(B)intersect {0};
    117                                               option.cross_auto_bin_max=0;
    118                                              }
    119                                              redb: cross ALU_cp,B_cp2,A
    120                                              {
    121                                               bins op_redB =binsof(ALU_cp.arith)&&binsof(B_cp2)&&binsof(A)intersect {0};
    122                                               option.cross_auto_bin_max=0;
    123                                              }
    124                                              reduction_invalid:coverpoint opcode iff(red_op_A ||red_op_B)
    125                                              {
    126                                               illegal_bins reduction_invalid []={[ADD:INVALID_7]};
    127                                              }
    128                                              endgroup
    129                                              function new();
    130             1                          1     cov =new();
    131                                              endfunction
    132                                              
    133                                              
    134                                              endclass
    135                                              
    136                                              endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File pck.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

COVERGROUP COVERAGE:
-----------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal    Status               
                                                                                              
-----------------------------------------------------------------------------------------------
 TYPE /m2/alsu/cov                                     100.0%        100    Covered              
    covered/total bins:                                    63         63                      
    missing/total bins:                                     0         63                      
    % Hit:                                             100.0%        100                      
    Coverpoint cov::A_cp1                              100.0%        100    Covered              
        covered/total bins:                                 3          3                      
        missing/total bins:                                 0          3                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::A_cp2                              100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::B_cp1                              100.0%        100    Covered              
        covered/total bins:                                 3          3                      
        missing/total bins:                                 0          3                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::B_cp2                              100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::ALU_cp                             100.0%        100    Covered              
        covered/total bins:                                 7          7                      
        missing/total bins:                                 0          7                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::reduction_invalid                  100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::A                                  100.0%        100    Covered              
        covered/total bins:                                 8          8                      
        missing/total bins:                                 0          8                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::B                                  100.0%        100    Covered              
        covered/total bins:                                 8          8                      
        missing/total bins:                                 0          8                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::direction                          100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::opcode                             100.0%        100    Covered              
        covered/total bins:                                 8          8                      
        missing/total bins:                                 0          8                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::serial_in                          100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cov::cin                                100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Cross cov::opcode_B                                100.0%        100    Covered              
        covered/total bins:                                 3          3                      
        missing/total bins:                                 0          3                      
        % Hit:                                         100.0%        100                      
    Cross cov::opcode_A                                100.0%        100    Covered              
        covered/total bins:                                 3          3                      
        missing/total bins:                                 0          3                      
        % Hit:                                         100.0%        100                      
    Cross cov::opcode_cin                              100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Cross cov::opcode_serial                           100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Cross cov::opcode_direction                        100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Cross cov::reda                                    100.0%        100    Covered              
        covered/total bins:                                 1          1                      
        missing/total bins:                                 0          1                      
        % Hit:                                         100.0%        100                      
    Cross cov::redb                                    100.0%        100    Covered              
        covered/total bins:                                 1          1                      
        missing/total bins:                                 0          1                      
        % Hit:                                         100.0%        100                      
 CLASS alsu
 Covergroup instance \/m2::alsu::cov                   100.0%        100    Covered              
    covered/total bins:                                    63         63                      
    missing/total bins:                                     0         63                      
    % Hit:                                             100.0%        100                      
    Coverpoint A_cp1                                   100.0%        100    Covered              
        covered/total bins:                                 3          3                      
        missing/total bins:                                 0          3                      
        % Hit:                                         100.0%        100                      
        bin A_data_0                                      902          1    Covered              
        bin A_data_max                                    915          1    Covered              
        bin A_data_min                                    901          1    Covered              
        default bin others                               2139               Occurred             
    Coverpoint A_cp2                                   100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin A_data_walkingones[1]                         118          1    Covered              
        bin A_data_walkingones[2]                         117          1    Covered              
    Coverpoint B_cp1                                   100.0%        100    Covered              
        covered/total bins:                                 3          3                      
        missing/total bins:                                 0          3                      
        % Hit:                                         100.0%        100                      
        bin B_data_0                                     1033          1    Covered              
        bin B_data_max                                    882          1    Covered              
        bin B_data_min                                    818          1    Covered              
        default bin others                               2124               Occurred             
    Coverpoint B_cp2                                   100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin B_data_walkingones[1]                          59          1    Covered              
        bin B_data_walkingones[2]                          64          1    Covered              
    Coverpoint ALU_cp                                  100.0%        100    Covered              
        covered/total bins:                                 7          7                      
        missing/total bins:                                 0          7                      
        % Hit:                                         100.0%        100                      
        illegal_bin invalid                               173               Occurred             
        bin trans                                           1          1    Covered              
        bin shift[SHIFT]                                  813          1    Covered              
        bin shift[ROTATE]                                 770          1    Covered              
        bin arith[OR]                                     753          1    Covered              
        bin arith[XOR]                                    769          1    Covered              
        bin bitwise[ADD]                                  776          1    Covered              
        bin bitwise[MULT]                                 803          1    Covered              
    Coverpoint reduction_invalid                       100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        illegal_bin reduction_invalid[ADD]                275               Occurred             
        illegal_bin reduction_invalid[MULT]               289               Occurred             
        illegal_bin reduction_invalid[SHIFT]              299               Occurred             
        illegal_bin reduction_invalid[ROTATE]             278               Occurred             
        illegal_bin reduction_invalid[INVALID_6]           30               Occurred             
        illegal_bin reduction_invalid[INVALID_7]           32               Occurred             
        bin auto[OR]                                      146          1    Covered              
        bin auto[XOR]                                     161          1    Covered              
    Coverpoint A                                       100.0%        100    Covered              
        covered/total bins:                                 8          8                      
        missing/total bins:                                 0          8                      
        % Hit:                                         100.0%        100                      
        bin auto[-4]                                      901          1    Covered              
        bin auto[-3]                                      392          1    Covered              
        bin auto[-2]                                      401          1    Covered              
        bin auto[-1]                                      405          1    Covered              
        bin auto[0]                                       902          1    Covered              
        bin auto[1]                                       469          1    Covered              
        bin auto[2]                                       472          1    Covered              
        bin auto[3]                                       915          1    Covered              
    Coverpoint B                                       100.0%        100    Covered              
        covered/total bins:                                 8          8                      
        missing/total bins:                                 0          8                      
        % Hit:                                         100.0%        100                      
        bin auto[-4]                                      818          1    Covered              
        bin auto[-3]                                      428          1    Covered              
        bin auto[-2]                                      390          1    Covered              
        bin auto[-1]                                      436          1    Covered              
        bin auto[0]                                      1033          1    Covered              
        bin auto[1]                                       470          1    Covered              
        bin auto[2]                                       400          1    Covered              
        bin auto[3]                                       882          1    Covered              
    Coverpoint direction                               100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin auto[0]                                      2423          1    Covered              
        bin auto[1]                                      2434          1    Covered              
    Coverpoint opcode                                  100.0%        100    Covered              
        covered/total bins:                                 8          8                      
        missing/total bins:                                 0          8                      
        % Hit:                                         100.0%        100                      
        bin auto[OR]                                      753          1    Covered              
        bin auto[XOR]                                     769          1    Covered              
        bin auto[ADD]                                     776          1    Covered              
        bin auto[MULT]                                    803          1    Covered              
        bin auto[SHIFT]                                   813          1    Covered              
        bin auto[ROTATE]                                  770          1    Covered              
        bin auto[INVALID_6]                                81          1    Covered              
        bin auto[INVALID_7]                                92          1    Covered              
    Coverpoint serial_in                               100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin auto[0]                                      2445          1    Covered              
        bin auto[1]                                      2412          1    Covered              
    Coverpoint cin                                     100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin auto[0]                                      2508          1    Covered              
        bin auto[1]                                      2349          1    Covered              
    Cross opcode_B                                     100.0%        100    Covered              
        covered/total bins:                                 3          3                      
        missing/total bins:                                 0          3                      
        % Hit:                                         100.0%        100                      
        bin op_b1                                         466          1    Covered              
        bin op_b2                                         507          1    Covered              
        bin op_b3                                         453          1    Covered              
    Cross opcode_A                                     100.0%        100    Covered              
        covered/total bins:                                 3          3                      
        missing/total bins:                                 0          3                      
        % Hit:                                         100.0%        100                      
        bin op_a1                                         454          1    Covered              
        bin op_a2                                         503          1    Covered              
        bin op_a3                                         476          1    Covered              
    Cross opcode_cin                                   100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin op_cin1                                       401          1    Covered              
        bin op_cin2                                       375          1    Covered              
    Cross opcode_serial                                100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin op_cin1                                       403          1    Covered              
        bin op_cin2                                       410          1    Covered              
    Cross opcode_direction                             100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin op_dir1                                       803          1    Covered              
        bin op_dir2                                       780          1    Covered              
    Cross reda                                         100.0%        100    Covered              
        covered/total bins:                                 1          1                      
        missing/total bins:                                 0          1                      
        % Hit:                                         100.0%        100                      
        bin op_redA                                       118          1    Covered              
    Cross redb                                         100.0%        100    Covered              
        covered/total bins:                                 1          1                      
        missing/total bins:                                 0          1                      
        % Hit:                                         100.0%        100                      
        bin op_redB                                        64          1    Covered              

TOTAL COVERGROUP COVERAGE: 100.0%  COVERGROUP TYPES: 1

ASSERTION RESULTS:
-------------------------------------------------------
Name                 File(Line)           Failure Pass 
                                          Count   Count 
-------------------------------------------------------
/ALSU_tb/#ublk#102282978#41/immed__42
                     ALSU_tb.sv(42)             0     1
/ALSU_tb/#anonblk#102282978#55#4#/#ublk#102282978#55/immed__56
                     ALSU_tb.sv(56)             0     1

Total Coverage By File (code coverage only, filtered view): 89.7%

